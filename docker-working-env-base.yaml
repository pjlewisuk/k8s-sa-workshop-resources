AWSTemplateFormatVersion: 2010-09-09

Description: This template deploys a VPC and an EC2 instance with Docker already installed, with the goal of standardizing the experience of the users for the Docker and k8s workshops.

Parameters:
  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: The EC2 key pair to be used for SSHing into the instance
  InstanceAmiId:
    Type: AWS::SSM::Parameter::Value<String>
    Description: The ID of the AMI to be used for the EC2 instance
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 192.168.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true

  IGW:
    Type: AWS::EC2::InternetGateway

  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC

  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: true
      CidrBlock: 192.168.0.0/24
      VpcId: !Ref VPC

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  RouteToInternet:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref RouteTable

  RouteToInternetAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the Docker/k8s workshop EC2 instance
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
      VpcId: !Ref VPC

  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref InstanceAmiId
      InstanceType: t2.medium
      KeyName: !Ref KeyPair
      SecurityGroupIds:
        - !Ref SecurityGroup
      SubnetId: !Ref Subnet
      Tags:
        - Key: Name
          Value: WorkshopInstance
      UserData: !Base64 |
        #!/bin/bash
        yum update -y
        amazon-linux-extras install -y docker
        chkconfig docker on
        usermod -a -G docker ec2-user
        curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
        chmod +x /usr/local/bin/docker-compose
        service docker restart

Outputs:
  Instance:
    Value: !GetAtt Instance.PublicIp
    Description: The public IP address of the instance from which the labs will be run.
